/**
 * Siterwell API
 * ## Response Structure  ### The Envelope Every response is contained by an envelope. That is, each response has a predictable set of keys with which you can expect to interact: ```json {     \"status\": \"success\",     \"message\": \".....\",     \"results\": {         ...     },     \"pagination\": {         \"next_url\": \"...\",         \"next_max_id\": \"13872296\"     } } ``` #### META The meta key is used to communicate extra information about the response to the developer. If all goes well, you'll only ever see a code key with value. However, sometimes things go wrong, and in that case you might see a   #### RESULTS The data key is the meat of the response. It may be a list or dictionary, but either way this is where you'll find the data you requested.  #### PAGINATION Sometimes you just can't get enough. For this reason, we've provided a convenient way to access more data in any request for sequential data. Simply call the url in the next_url parameter and we'll respond with the next set of data. ```json {     ...     \"pagination\": {         \"next_url\": \"https://api.instagram.com/v1/tags/puppy/media/recent?access_token=fb2e77d.47a0479900504cb3ab4a1f626d174d2d&max_id=13872296\",         \"next_max_id\": \"13872296\"     } } ``` On views where pagination is present, we also support the \"count\" parameter. Simply set this to the number of items you'd like to receive. Note that the default values should be fine for most applications - but if you decide to increase this number there is a maximum value defined on each endpoint. ## Capability and Property The device management API will send controller/device capability and property to commuicate with backend server, and all supported json values are list below.  #### Controller capabilities ```table Name              | JSON_name           | Description ------------------------------------------------------------------------------  ``` #### Controller properties ```table Name          | JSON_name     | JSON_value | Description ------------------------------------------------------------------------------ Battery Level | batteryLevel | 0-100   | The current battery level of the controller in %  Charging      | charging      | 1,0     | 1: charging, 0: not charging ControllerId  | controlerId   | XXXXX   | uuid of the controller Brand         | brand         | siterwell | A type indicator for the brand of controller, ex:siterwell Version       | version       | 1.0.0   | Version of the controller Timezone      | timezone      | GMT+8   | Timezone configured on the tablet Longitude     | longitude     | 25.02   | Longitude of the controller Latitude      | latitude      | 121.38  | Latitude of the controller Mode          | mode          | home/away | Automation mode of the controller, ex:away or home  ``` #### Device capabilities   ```table Name              | JSON_name           | Description ------------------------------------------------------------------------------ Capture Picture   | capturePicture      | The controller can capture a picture  Temperature       | temperature         | The device can change the desired temperature Carbon_monoxide   | carbonMonoxide      | The device can detect carbon monoxide  Access_control    | accessControl       | The device can detect access control  Burglar           | burglar             | The device can detect motion  Smoke             | smoke               | The device can detect smoke  Switch            | switch              | The device can switch on and off    ``` #### Device properties ```table Name          | JSON_name      | JSON_value  | Description ------------------------------------------------------------------------------ Temperature   | temperature   | -100~100    | The current temperature in Â°C Carbon Monoxide | carbonMonoxide | 0-255   | Carbon Monoxide Smoke         | smoke         | 0-255       | Smoke Burglar       | burglar       | 1,0         | Burglar Switch        | switch        | 1,0         | 1: Light or wall plug is witched on, 0: it's switched off Mode          | mode          | home/away   | Automation mode of the controller, ex:away or home  ``` 
 *
 * OpenAPI spec version: 1.0.37.1
 * Contact: info@siterwell.co.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.PropertyItem;
import java.util.*;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class DeviceItem  {
  
  @SerializedName("devId")
  private String devId = null;
  @SerializedName("name")
  private String name = null;
  @SerializedName("active")
  private String active = null;
  @SerializedName("caps")
  private List<String> caps = null;
  @SerializedName("groups")
  private List<String> groups = null;
  @SerializedName("props")
  private List<PropertyItem> props = null;

  /**
   * Device id
   **/
  @ApiModelProperty(required = true, value = "Device id")
  public String getDevId() {
    return devId;
  }
  public void setDevId(String devId) {
    this.devId = devId;
  }

  /**
   * Device name
   **/
  @ApiModelProperty(required = true, value = "Device name")
  public String getName() {
    return name;
  }
  public void setName(String name) {
    this.name = name;
  }

  /**
   * 0 is normal, 1 is connection lost
   **/
  @ApiModelProperty(required = true, value = "0 is normal, 1 is connection lost")
  public String getActive() {
    return active;
  }
  public void setActive(String active) {
    this.active = active;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getCaps() {
    return caps;
  }
  public void setCaps(List<String> caps) {
    this.caps = caps;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<String> getGroups() {
    return groups;
  }
  public void setGroups(List<String> groups) {
    this.groups = groups;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<PropertyItem> getProps() {
    return props;
  }
  public void setProps(List<PropertyItem> props) {
    this.props = props;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DeviceItem deviceItem = (DeviceItem) o;
    return (this.devId == null ? deviceItem.devId == null : this.devId.equals(deviceItem.devId)) &&
        (this.name == null ? deviceItem.name == null : this.name.equals(deviceItem.name)) &&
        (this.active == null ? deviceItem.active == null : this.active.equals(deviceItem.active)) &&
        (this.caps == null ? deviceItem.caps == null : this.caps.equals(deviceItem.caps)) &&
        (this.groups == null ? deviceItem.groups == null : this.groups.equals(deviceItem.groups)) &&
        (this.props == null ? deviceItem.props == null : this.props.equals(deviceItem.props));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.devId == null ? 0: this.devId.hashCode());
    result = 31 * result + (this.name == null ? 0: this.name.hashCode());
    result = 31 * result + (this.active == null ? 0: this.active.hashCode());
    result = 31 * result + (this.caps == null ? 0: this.caps.hashCode());
    result = 31 * result + (this.groups == null ? 0: this.groups.hashCode());
    result = 31 * result + (this.props == null ? 0: this.props.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DeviceItem {\n");
    
    sb.append("  devId: ").append(devId).append("\n");
    sb.append("  name: ").append(name).append("\n");
    sb.append("  active: ").append(active).append("\n");
    sb.append("  caps: ").append(caps).append("\n");
    sb.append("  groups: ").append(groups).append("\n");
    sb.append("  props: ").append(props).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
