/**
 * Siterwell API
 * ## Response Structure  ### The Envelope Every response is contained by an envelope. That is, each response has a predictable set of keys with which you can expect to interact: ```json {     \"status\": \"success\",     \"message\": \".....\",     \"results\": {         ...     },     \"pagination\": {         \"next_url\": \"...\",         \"next_max_id\": \"13872296\"     } } ``` #### META The meta key is used to communicate extra information about the response to the developer. If all goes well, you'll only ever see a code key with value. However, sometimes things go wrong, and in that case you might see a   #### RESULTS The data key is the meat of the response. It may be a list or dictionary, but either way this is where you'll find the data you requested.  #### PAGINATION Sometimes you just can't get enough. For this reason, we've provided a convenient way to access more data in any request for sequential data. Simply call the url in the next_url parameter and we'll respond with the next set of data. ```json {     ...     \"pagination\": {         \"next_url\": \"https://api.instagram.com/v1/tags/puppy/media/recent?access_token=fb2e77d.47a0479900504cb3ab4a1f626d174d2d&max_id=13872296\",         \"next_max_id\": \"13872296\"     } } ``` On views where pagination is present, we also support the \"count\" parameter. Simply set this to the number of items you'd like to receive. Note that the default values should be fine for most applications - but if you decide to increase this number there is a maximum value defined on each endpoint. ## Capability and Property The device management API will send controller/device capability and property to commuicate with backend server, and all supported json values are list below.  #### Controller capabilities ```table Name              | JSON_name           | Description ------------------------------------------------------------------------------  ``` #### Controller properties ```table Name          | JSON_name     | JSON_value | Description ------------------------------------------------------------------------------ Battery Level | batteryLevel | 0-100   | The current battery level of the controller in %  Charging      | charging      | 1,0     | 1: charging, 0: not charging ControllerId  | controlerId   | XXXXX   | uuid of the controller Brand         | brand         | siterwell | A type indicator for the brand of controller, ex:siterwell Version       | version       | 1.0.0   | Version of the controller Timezone      | timezone      | GMT+8   | Timezone configured on the tablet Longitude     | longitude     | 25.02   | Longitude of the controller Latitude      | latitude      | 121.38  | Latitude of the controller Mode          | mode          | home/away | Automation mode of the controller, ex:away or home  ``` #### Device capabilities   ```table Name              | JSON_name           | Description ------------------------------------------------------------------------------ Capture Picture   | capturePicture      | The controller can capture a picture  Temperature       | temperature         | The device can change the desired temperature Carbon_monoxide   | carbonMonoxide      | The device can detect carbon monoxide  Access_control    | accessControl       | The device can detect access control  Burglar           | burglar             | The device can detect motion  Smoke             | smoke               | The device can detect smoke  Switch            | switch              | The device can switch on and off    ``` #### Device properties ```table Name          | JSON_name      | JSON_value  | Description ------------------------------------------------------------------------------ Temperature   | temperature   | -100~100    | The current temperature in Â°C Carbon Monoxide | carbonMonoxide | 0-255   | Carbon Monoxide Smoke         | smoke         | 0-255       | Smoke Burglar       | burglar       | 1,0         | Burglar Switch        | switch        | 1,0         | 1: Light or wall plug is witched on, 0: it's switched off Mode          | mode          | home/away   | Automation mode of the controller, ex:away or home  ``` 
 *
 * OpenAPI spec version: 1.0.37.1
 * Contact: info@siterwell.co.uk
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package io.swagger.client.model;

import io.swagger.client.model.LogItemContent;
import java.math.BigDecimal;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;


@ApiModel(description = "")
public class LogItem  {
  
  @SerializedName("_id")
  private String id = null;
  @SerializedName("owner")
  private String owner = null;
  @SerializedName("purpose")
  private String purpose = null;
  @SerializedName("logType")
  private String logType = null;
  @SerializedName("group")
  private String group = null;
  @SerializedName("time")
  private BigDecimal time = null;
  @SerializedName("desc")
  private String desc = null;
  @SerializedName("detailsIcon")
  private String detailsIcon = null;
  @SerializedName("icon")
  private String icon = null;
  @SerializedName("severity")
  private String severity = null;
  @SerializedName("content")
  private LogItemContent content = null;

  /**
   * unique if
   **/
  @ApiModelProperty(value = "unique if")
  public String getId() {
    return id;
  }
  public void setId(String id) {
    this.id = id;
  }

  /**
   * user email
   **/
  @ApiModelProperty(value = "user email")
  public String getOwner() {
    return owner;
  }
  public void setOwner(String owner) {
    this.owner = owner;
  }

  /**
   * purpose
   **/
  @ApiModelProperty(value = "purpose")
  public String getPurpose() {
    return purpose;
  }
  public void setPurpose(String purpose) {
    this.purpose = purpose;
  }

  /**
   * log type
   **/
  @ApiModelProperty(value = "log type")
  public String getLogType() {
    return logType;
  }
  public void setLogType(String logType) {
    this.logType = logType;
  }

  /**
   * group
   **/
  @ApiModelProperty(value = "group")
  public String getGroup() {
    return group;
  }
  public void setGroup(String group) {
    this.group = group;
  }

  /**
   * log happend time
   **/
  @ApiModelProperty(value = "log happend time")
  public BigDecimal getTime() {
    return time;
  }
  public void setTime(BigDecimal time) {
    this.time = time;
  }

  /**
   * log description
   **/
  @ApiModelProperty(value = "log description")
  public String getDesc() {
    return desc;
  }
  public void setDesc(String desc) {
    this.desc = desc;
  }

  /**
   * custom device icon
   **/
  @ApiModelProperty(value = "custom device icon")
  public String getDetailsIcon() {
    return detailsIcon;
  }
  public void setDetailsIcon(String detailsIcon) {
    this.detailsIcon = detailsIcon;
  }

  /**
   * msg type
   **/
  @ApiModelProperty(value = "msg type")
  public String getIcon() {
    return icon;
  }
  public void setIcon(String icon) {
    this.icon = icon;
  }

  /**
   * severity
   **/
  @ApiModelProperty(value = "severity")
  public String getSeverity() {
    return severity;
  }
  public void setSeverity(String severity) {
    this.severity = severity;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public LogItemContent getContent() {
    return content;
  }
  public void setContent(LogItemContent content) {
    this.content = content;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogItem logItem = (LogItem) o;
    return (this.id == null ? logItem.id == null : this.id.equals(logItem.id)) &&
        (this.owner == null ? logItem.owner == null : this.owner.equals(logItem.owner)) &&
        (this.purpose == null ? logItem.purpose == null : this.purpose.equals(logItem.purpose)) &&
        (this.logType == null ? logItem.logType == null : this.logType.equals(logItem.logType)) &&
        (this.group == null ? logItem.group == null : this.group.equals(logItem.group)) &&
        (this.time == null ? logItem.time == null : this.time.equals(logItem.time)) &&
        (this.desc == null ? logItem.desc == null : this.desc.equals(logItem.desc)) &&
        (this.detailsIcon == null ? logItem.detailsIcon == null : this.detailsIcon.equals(logItem.detailsIcon)) &&
        (this.icon == null ? logItem.icon == null : this.icon.equals(logItem.icon)) &&
        (this.severity == null ? logItem.severity == null : this.severity.equals(logItem.severity)) &&
        (this.content == null ? logItem.content == null : this.content.equals(logItem.content));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.id == null ? 0: this.id.hashCode());
    result = 31 * result + (this.owner == null ? 0: this.owner.hashCode());
    result = 31 * result + (this.purpose == null ? 0: this.purpose.hashCode());
    result = 31 * result + (this.logType == null ? 0: this.logType.hashCode());
    result = 31 * result + (this.group == null ? 0: this.group.hashCode());
    result = 31 * result + (this.time == null ? 0: this.time.hashCode());
    result = 31 * result + (this.desc == null ? 0: this.desc.hashCode());
    result = 31 * result + (this.detailsIcon == null ? 0: this.detailsIcon.hashCode());
    result = 31 * result + (this.icon == null ? 0: this.icon.hashCode());
    result = 31 * result + (this.severity == null ? 0: this.severity.hashCode());
    result = 31 * result + (this.content == null ? 0: this.content.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogItem {\n");
    
    sb.append("  id: ").append(id).append("\n");
    sb.append("  owner: ").append(owner).append("\n");
    sb.append("  purpose: ").append(purpose).append("\n");
    sb.append("  logType: ").append(logType).append("\n");
    sb.append("  group: ").append(group).append("\n");
    sb.append("  time: ").append(time).append("\n");
    sb.append("  desc: ").append(desc).append("\n");
    sb.append("  detailsIcon: ").append(detailsIcon).append("\n");
    sb.append("  icon: ").append(icon).append("\n");
    sb.append("  severity: ").append(severity).append("\n");
    sb.append("  content: ").append(content).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
